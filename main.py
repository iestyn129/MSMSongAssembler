from midi_parser import MidiData
from os import PathLike
from pathlib import Path
from pydub import AudioSegment
from pydub.effects import normalize#, pan
#from random import uniform
from song_data import Song, Track, Note
from shutil import rmtree
from sys import argv
#from swing import swing


def main() -> None:
	if len(argv) < 5:
		print(f'usage: {argv[0]} midi_folder bin_folder audio_folder output_folder')
		return

	midi_folder: Path = Path(argv[1])
	bin_folder: Path = Path(argv[2])
	audio_folder: Path = Path(argv[3])
	output_folder: Path = Path(argv[4])

	if output_folder.exists():
		rmtree(output_folder, ignore_errors=True)
	output_folder.mkdir(parents=True, exist_ok=True)

	midi_files: list[PathLike] = list(midi_folder.glob('world[0-9]*.mid'))
	midi_files.sort()
	midi_file: PathLike
	for midi_file in midi_files:
		song: Song = Song.from_midi(MidiData.parse(midi_file), bin_folder)
		print(f'Starting {song.name}:')

		song_audio: AudioSegment = AudioSegment.silent(song.length * 1000, 44100)

		track: Track
		for track in song.tracks:
			#if not track.name.startswith('Q'):
			#	continue
			print(f'\tAdding {track.name}...')
			audios: dict[int, AudioSegment] = {
				audio_note: AudioSegment.from_wav(audio_folder.joinpath(audio)) - 12
				for audio_note, audio in track.instrument.tracks.items()
			}

			note: Note#; direction: float = uniform(-.75, .75)
			for note in track.notes:
				if note.note not in audios:
					# many islands have misclicks and old data in their midis
					# faerie island, for example, has data for tuskskis second track, which doesn't exist
					continue

				note_audio: AudioSegment = audios.get(note.note)[:(note.end - note.start) * 1000]
				#note_audio = pan(note_audio, direction)
				song_audio = song_audio.overlay(note_audio, position=note.start * 1000)

		song_audio = normalize(song_audio)
		#song_audio = swing(song_audio, song.bpm)
		song_audio.export(
			output_folder.joinpath(song.name + '.mp3'),
			format='mp3',
			bitrate='192k',
			tags={
				'Name': song.name,
				'Track': song.island_id,
				'Album': 'My Singing Monsters',
				'Artist': 'Big Blue Bubble',
				'Comment': 'Generated by github.com/iestyn129/MSMSongAssembler'
			}
		)


if __name__ == '__main__':
	main()
